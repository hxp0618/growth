version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: growth-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: growth
      MYSQL_USER: growth
      MYSQL_PASSWORD: growth123
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/main/resources/sql:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - growth-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p123456"]
      timeout: 5s
      retries: 10
      start_period: 30s

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: growth-redis
    restart: always
    environment:
      TZ: Asia/Shanghai
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    networks:
      - growth-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
      start_period: 10s

  # Spring Boot 应用
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: growth-backend:latest
    container_name: growth-app
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: prd
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/growth?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8
      SPRING_DATASOURCE_USERNAME: growth
      SPRING_DATASOURCE_PASSWORD: growth123
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SA_TOKEN_ALONE_REDIS_HOST: redis
      SA_TOKEN_ALONE_REDIS_PORT: 6379
      TZ: Asia/Shanghai
    ports:
      - "8080:8080"
    volumes:
      - app_logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - growth-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: growth-nginx
    restart: always
    environment:
      TZ: Asia/Shanghai
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - growth-network
    profiles:
      - nginx

# 数据卷
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

# 网络
networks:
  growth-network:
    driver: bridge
